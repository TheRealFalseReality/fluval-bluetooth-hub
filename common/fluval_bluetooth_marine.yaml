substitutions:
  mac_address_marine: '00:00:00:00:00:00'

ble_client:
  - mac_address: ${mac_address_marine}
    id: ble_fluval_marine
    auto_connect: true
    on_connect:
      then:
        - binary_sensor.template.publish:
            id: marine_connection
            state: ON
        - lambda: |-
            ESP_LOGD("ble_client_lambda", "Connected to BLE device");
    on_disconnect:
      then:
        - binary_sensor.template.publish:
            id: marine_connection
            state: OFF
        - lambda: |-
            ESP_LOGD("ble_client_lambda", "Disconnected from BLE device");

esp32_ble_tracker:
  on_ble_advertise:
    - mac_address:
        - ${mac_address_marine}
      then:
        - lambda: |-
            ESP_LOGD("ble_adv", "New BLE device");
            ESP_LOGD("ble_adv", "  address: %s", x.address_str().c_str());
            ESP_LOGD("ble_adv", "  name: %s", x.get_name().c_str());
            ESP_LOGD("ble_adv", "  Advertised service UUIDs:");
            for (auto uuid : x.get_service_uuids()) {
                ESP_LOGD("ble_adv", "    - %s", uuid.to_string().c_str());
            }
            ESP_LOGD("ble_adv", "  Advertised service data:");
            for (auto data : x.get_service_datas()) {
                ESP_LOGD("ble_adv", "    - %s: (length %i)", data.uuid.to_string().c_str(), data.data.size());
            }
            ESP_LOGD("ble_adv", "  Advertised manufacturer data:");
            for (auto data : x.get_manufacturer_datas()) {
                ESP_LOGD("ble_adv", "    - %s: (length %i)", data.uuid.to_string().c_str(), data.data.size());
            }

binary_sensor:
  - platform: ble_presence
    mac_address: ${mac_address_marine}
    name: "Marine Presence"
    id: marine_presence
    entity_category: "diagnostic"
    device_class: presence

  - platform: template
    name: Marine BLE Connection
    id: marine_connection
    entity_category: "diagnostic"
    device_class: connectivity
    lambda: |-
      return {};

fluval_ble_led:
  - ble_client_id: ble_fluval_marine
    time_id: ha_time
    number_of_channels: 5
    id: fluval_marine

sensor:
  - platform: ble_rssi
    mac_address: ${mac_address_marine}
    name: Marine Fluval Light Signal
    id: bluetooth_signal_marine
    disabled_by_default: True
    entity_category: "diagnostic"

  - platform: copy
    source_id: bluetooth_signal_marine
    name: Marine Fluval Light Signal Strength
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    channel: 1
    zero_if_off: true
    name: "Marine - Pink"
    icon: mdi:lightbulb-outline
    id: fluval_marine_pink
    disabled_by_default: true

  - platform: copy
    name: Marine - Pink Brightness
    source_id: fluval_marine_pink
    unit_of_measurement: '%'
    filters:
      - calibrate_linear:
         method: least_squares
         datapoints:
          - 0.0 -> 0.0
          - 1000.0 -> 100.0

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    channel: 2
    zero_if_off: true
    name: "Marine - Cyan"
    icon: mdi:lightbulb-outline
    id: fluval_marine_cyan
    disabled_by_default: true

  - platform: copy
    name: Marine - Cyan Brightness
    source_id: fluval_marine_cyan
    unit_of_measurement: '%'
    filters:
      - calibrate_linear:
         method: least_squares
         datapoints:
          - 0.0 -> 0.0
          - 1000.0 -> 100.0

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    channel: 3
    zero_if_off: true
    name: "Marine - Blue"
    icon: mdi:lightbulb-outline
    id: fluval_marine_blue
    disabled_by_default: true
    
  - platform: copy
    name: Marine - Blue Brightness
    source_id: fluval_marine_blue
    unit_of_measurement: '%'
    filters:
      - calibrate_linear:
         method: least_squares
         datapoints:
          - 0.0 -> 0.0
          - 1000.0 -> 100.0

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    channel: 4
    zero_if_off: true
    name: "Marine - Purple"
    icon: mdi:lightbulb-outline
    id: fluval_marine_purple
    disabled_by_default: true
    
  - platform: copy
    name: Marine - Purple Brightness
    source_id: fluval_marine_purple
    unit_of_measurement: '%'
    filters:
      - calibrate_linear:
         method: least_squares
         datapoints:
          - 0.0 -> 0.0
          - 1000.0 -> 100.0

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    channel: 5
    zero_if_off: true
    name: "Marine - Cold White"
    icon: mdi:lightbulb-outline
    id: fluval_marine_cold_white
    disabled_by_default: true
    
  - platform: copy
    name: Marine - Cold White Brightness
    source_id: fluval_marine_cold_white
    unit_of_measurement: '%'
    filters:
      - calibrate_linear:
         method: least_squares
         datapoints:
          - 0.0 -> 0.0
          - 1000.0 -> 100.0

button:    
  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    mode: "MANUAL"
    name: "Marine - Switch to Manual"
    icon: mdi:lightbulb-alert-outline
    id: switch_manual_marine

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    mode: "AUTO"
    name: "Marine - Switch to Auto"
    icon: mdi:lightbulb-auto-outline
    id: switch_auto_marine

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    mode: "PRO"
    name: "Marine - Switch to Pro"
    icon: mdi:lightbulb-on-outline
    id: switch_pro_marine

switch:
  - platform: ble_client
    ble_client_id: ble_fluval_marine
    name: "Marine Bluetooth Connection"
    restore_mode: RESTORE_DEFAULT_ON

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    name: "Marine Fluval Light"
    restore_mode: RESTORE_DEFAULT_ON
    icon: mdi:led-strip

text_sensor:
  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    mapping_manual: "Manual"
    mapping_auto: "Auto"
    mapping_pro: "Pro"
    name: "Marine Fluval Light Mode"
    icon: mdi:lightbulb-group-outline
    # id: fluval_marine_mode
    # on_value:
    #   then:
    #     - component.update: fluval_marine_mode_select
    #   - lambda: |-
    #       if (x == "Manual") {
    #         auto call = id(fluval_marine_mode_select).make_call();
    #         call.set_option("Manual");
    #         call.perform();
    #       }
    #       if (x == "Auto") {
    #         auto call = id(fluval_marine_mode_select).make_call();
    #         call.set_option("Auto");
    #         call.perform();
    #       }
    #       if (x == "Pro") {
    #         auto call = id(fluval_marine_mode_select).make_call();
    #         call.set_option("Pro");
    #         call.perform();
    #       }

number:
  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    name: "Marine - Pink"
    channel: 1
    zero_if_off: true
    step: 10

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    name: "Marine - Cyan"
    channel: 2
    zero_if_off: true
    step: 10

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    name: "Marine - Blue"
    channel: 3
    zero_if_off: true
    step: 10

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    name: "Marine - Purple"
    channel: 4
    zero_if_off: true
    step: 10

  - platform: fluval_ble_led
    fluval_ble_led_id: fluval_marine
    name: "Marine - Cold White"
    channel: 5
    zero_if_off: true
    step: 10

select:
  - platform: template
    name: "Marine Mode Select"
    id: fluval_marine_mode_select
    optimistic: true
    # update_interval: 1s
    icon: mdi:auto-mode
    options:
      - Manual
      - Auto
      - Pro
    # lambda: |-
    #   if (id(fluval_marine_mode).state == "Manual") {
    #     return {"Manual"};
    #   }
    #   if (id(fluval_marine_mode).state == "Auto") {
    #     return {"Auto"};
    #   }
    #   if (id(fluval_marine_mode).state == "Pro") {
    #     return {"Pro"};
    #   }
    #   else {
    #     return {};
    #   }
    on_value:
    # set_action:
      then:
        - lambda: |-
            if (x == "Manual") {
              id(switch_manual_marine).press();
            }
            if (x == "Auto") {
              id(switch_auto_marine).press();
            }
            if (x == "Pro") {
              id(switch_pro_marine).press();
            }

# output:
#   - platform: template
#     id: fluval_marine_blue_output
#     type: float
#     write_action: 
#       - number.set:
#           id: fluval_marine_blue_number
#           value: !lambda return state;

# light:
#   - platform: monochromatic
#     name: "Kitchen Lights"
#     output: fluval_marine_blue_output